version: "3"
services: 
    mongodb:
        # image: mongo:6.0.11
        user: "${USER_ID}:${GROUP_ID}"
        image: mongo:7.0.12
        container_name: mongodb
        # command: ["--auth"]
        volumes:
            # - mongodata:/data/db
            - ${MONGO_CONF_DEST}:/data/configdb
            - ${MONGO_DB_DEST}:/data/db
        networks: 
            - default
        restart: always
        privileged: true
        command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
        ports: 
            - "27017:27017"
    mongo_sh:
        container_name: mongo_sh
        image: mongo:7.0.12
        volumes:
            - ./mongosh/init-replica-set.js:/scripts/init-replica-set.js
        depends_on:
            - mongodb
        command: mongosh --host mongodb:27017 /scripts/init-replica-set.js
    redis:
        image: redis:7.4
        container_name: redis
        # command: redis-server /usr/local/etc/redis/redis.conf
        # volumes:
        #     - ${REDIS_DEST}/conf/redis.conf:/usr/local/etc/redis/redis.conf
        networks: 
            - default
        restart: always
        ports:
            - "6379:6379"
    queue:
        image: rabbitmq:3-management
        container_name: mq3
        restart: always
        hostname: localhost
        ports:
            - "5672:5672"
            - "15672:15672"
    # metabase:
    #     image: metabase/metabase:latest
    #     container_name: metabase
    #     restart: always
    #     hostname: localhost
    #     networks: 
    #         - default
    #     depends_on:
    #         - postgres15x
    #     environment:
    #         MB_DB_TYPE: postgres
    #         MB_DB_DBNAME: metabase
    #         MB_DB_PORT: 5432
    #         MB_DB_USER: xxxhand
    #         MB_DB_PASS: hellokitty
    #         MB_DB_HOST: postgres15x
    #     ports:
    #         - "9856:3000"                
    # postgres15x:
    #     image: postgres:15.5-alpine
    #     container_name: postgres15x
    #     restart: always
    #     hostname: localhost
    #     volumes:
    #         # - postgresdata:/var/lib/postgresql/data
    #         - ~/Documents/docker-data/postgres/data:/var/lib/postgresql/data
    #     networks: 
    #         - default
    #     environment:
    #         POSTGRES_USER: postgres
    #         POSTGRES_PASSWORD: hellokitty
    #     ports:
    #         - "5432:5432"
    #         - "8443:8443"
    # keycloak1x:
    #     image: jboss/keycloak:latest
    #     container_name: keycloak1x
    #     restart: always
    #     environment:
    #         DB_VENDOR: POSTGRES
    #         DB_ADDR: postgres9x
    #         DB_DATABASE: keycloak
    #         DB_USER: xxxhand
    #         DB_SCHEMA: public
    #         DB_PASSWORD: hellokitty
    #         KEYCLOAK_USER: admin
    #         KEYCLOAK_PASSWORD: admin
    #     ports:
    #         - "8080:8080"
    #     depends_on:
    #         - postgres9x
    # nginx:
    #     image: nginx:1.20.0-alpine
    #     container_name: nginx1x
    #     restart: always
    #     volumes:
    #         - ${NGINX_DEST}/html:/usr/share/nginx/html
    #         - ${NGINX_DEST}/nginx:/etc/nginx
    #         - ${NGINX_DEST}/log:/var/log/nginx
    #     networks: 
    #         - default
    #     ports:
    #         - "9002:9002"
    #         - "9001:9001"
    #         - "80:80"
#         extra_hosts:
#             - "localnode:192.168.0.193"
volumes: 
    mongodata:
        external: 'false'
#     postgresdata:
#         external: 'false'
networks:
    default:
        external: true 
        name: docker-data_default    
